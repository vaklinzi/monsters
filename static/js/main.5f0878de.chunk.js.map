{"version":3,"sources":["components/card/Card.jsx","components/card-list/CardList.jsx","components/search-field/SearchField.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","CardList","monsters","map","SearchField","placeholder","handleChange","type","onChange","App","onSearchFieldChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAGaA,G,MAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BH,EAAQI,MACrD,6BAAKJ,EAAQK,YCHNC,G,MAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACE,qBAAKN,UAAU,YAAf,SACGM,EAASC,KAAI,SAACR,GAAD,OACZ,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQI,WCLhCK,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACzB,uBACEV,UAAU,SACVW,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCHOG,G,wDACnB,aAAe,IAAD,8BACZ,gBAcFC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALH,E,gEASO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEV,SAAUmB,S,+BAOrC,IAAD,EAC2BC,KAAKN,MAA/BH,EADD,EACCA,YAEFU,EAHC,EACcrB,SAEasB,QAAO,SAAC7B,GAAD,OACvCA,EAAQK,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACES,YAAY,kBACZC,aAAcgB,KAAKZ,sBAErB,cAAC,EAAD,CAAUR,SAAUqB,W,GAlCKI,IAAMC,YCOxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5f0878de.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css';\n\nexport const Card = ({ monster }) => {\n  return (\n    <div className=\"card-container\">\n      <img alt=\"cats\" src={`https://robohash.org/${monster.id}`} />\n      <h2>{monster.name}</h2>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Card } from '../card/Card';\nimport './CardList.css';\n\nexport const CardList = ({ monsters }) => {\n  return (\n    <div className=\"card-list\">\n      {monsters.map((monster) => (\n        <Card monster={monster} key={monster.id} />\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport './SearchField.css';\n\nexport const SearchField = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n","import React from 'react';\nimport { CardList } from './components/card-list/CardList';\nimport { SearchField } from './components/search-field/SearchField';\nimport './App.css';\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  onSearchFieldChange = (event) => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  render() {\n    const { searchField, monsters } = this.state;\n\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchField\n          placeholder=\"search monsters\"\n          handleChange={this.onSearchFieldChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}